# NOTE: update this with your service name
# S3 bucket us-east-1
# Dynamo us-east-2
# noteId 27e69750-347a-11eb-a0a8-199489ef4152
# S3 sergey-note-app-upload
# Pool Id us-east-1_fbtpYtPhU
# Pool ARN arn:aws:cognito-idp:us-east-1:207904706662:userpool/us-east-1_fbtpYtPhU
# App client id 61vvus3jkas81ifo6fatvvnf2v
# --username sergey@example.com --password Pass1234!
# STRIPE
# Publishable key pk_test_51HttxqLQsfnxbeU3NOCaytXVkxoYKHBbVuOZCRsjtOnqBvQG6VGcRMY4WLxYGLWuucIPsJWWJFBxTNBuYVlObhjQ00XkFbwLmq
# Secret key sk_test_51HttxqLQsfnxbeU3eqxOeRp8Aav9ox8SQsqsDdriCC4kC5J05KWd1JqtpSQC9Eu8pI7INw2Cwn1DDB6lx8uvfmAL00ygy2LE4P
service: notes-api

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: us-east-1
  environment:
    tableName: notes
    stripeSecretKey: ${env:STRIPE_SECRET_KEY}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: 'arn:aws:dynamodb:us-east-2:207904706662:table/notes'
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #

functions:
  create:
    handler: create.main
    events:
      - http:
          path: notes
          method: post
          authorizer: aws_iam
  get:
    handler: get.main
    events:
      - http:
          path: notes/{id}
          method: get
          authorizer: aws_iam
  list:
    handler: list.main
    events:
      - http:
          path: notes
          method: get
          authorizer: aws_iam
  update:
    handler: update.main
    events:
      - http:
          path: notes/{id}
          method: put
          authorizer: aws_iam
  delete:
    handler: delete.main
    events:
      - http:
          path: notes/{id}
          method: delete
          authorizer: aws_iam
  billing:
    handler: billing.main
    events:
      - http:
          path: billing
          method: post
          authorizer: aws_iam
